{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","className","s","buttonsBox","map","option","button","join","type","onClick","Section","title","children","section","Notification","massage","notification","Feedback","useState","setGood","setNeutral","setBad","countTotalFeedback","prev","percents","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,OAAS,gCAAgC,WAAa,oCAAoC,KAAO,8BAA8B,IAAM,6BAA6B,QAAU,mC,kBCA9LD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,aAAe,qC,+JCclBC,MAZf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,Y,gBCYSC,MAnBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKC,UAAWC,IAAEC,WAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEJ,UAAW,CAACC,IAAEI,OAAQJ,IAAEG,IAASE,KAAK,KAEtCC,KAAK,SACLC,QAAS,WACPT,EAAgBK,IALpB,SAQGA,GANIA,S,gBCGAK,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASX,UAAWC,IAAEW,QAAtB,UACE,oBAAIZ,UAAWC,IAAES,MAAjB,SAAyBA,IACxBC,M,gBCIQE,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mCACE,mBAAGd,UAAWC,IAAEc,aAAhB,SAA+BD,O,MCGtB,SAASE,IAAY,IAAD,EACTC,mBAAS,GADA,mBAC1BzB,EAD0B,KACpB0B,EADoB,OAEHD,mBAAS,GAFN,mBAE1BxB,EAF0B,KAEjB0B,EAFiB,OAGXF,mBAAS,GAHE,mBAG1BvB,EAH0B,KAGrB0B,EAHqB,KAwB3BC,EAAqB,WACzB,OAAO7B,EAAOC,EAAUC,GAQ1B,OACE,qCACE,cAAC,EAAD,CAASgB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEZ,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAjCc,SAAAK,GACpB,OAAQA,GACN,IAAK,OACHc,GAAQ,SAAAI,GAAI,OAAIA,EAAO,KACvB,MAEF,IAAK,UACHH,GAAW,SAAAG,GAAI,OAAIA,EAAO,KAC1B,MAEF,IAAK,MACHF,GAAO,SAAAE,GAAI,OAAIA,EAAO,KACtB,MAEF,QACE,aAqBF,cAAC,EAAD,CAASZ,MAAM,aAAf,SAC4B,IAAzBW,IACC,cAAC,EAAD,CAAcP,QAAQ,sBAEtB,cAAC,EAAD,CACEtB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO0B,IACPzB,mBAtB8B,WACtC,IAAM2B,EAAWC,KAAKC,MAAOjC,EAAO6B,IAAwB,KAC5D,OAAgC,IAAzBA,IAA6BE,EAAW,EAoBnBG,UCtDhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f5315866.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3Ww_z\",\"buttonsBox\":\"FeedbackOptions_buttonsBox__17LYk\",\"good\":\"FeedbackOptions_good__2MSgw\",\"bad\":\"FeedbackOptions_bad__28fIi\",\"neutral\":\"FeedbackOptions_neutral__3hR5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3V5Nb\",\"title\":\"Section_title__1sJOM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3SruV\"};","import PropTypes from 'prop-types';\nimport './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage} %</p>\n    </>\n  );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.buttonsBox}>\n      {options.map(option => (\n        <button\n          className={[s.button, s[option]].join(' ')}\n          key={option}\n          type=\"button\"\n          onClick={() => {\n            onLeaveFeedback(option);\n          }}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ massage }) {\n  return (\n    <>\n      <p className={s.notification}>{massage}</p>\n    </>\n  );\n}\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { useState } from 'react';\n\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nimport './App.css';\n\nexport default function Feedback() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const leaveFeedback = option => {\n    switch (option) {\n      case 'good':\n        setGood(prev => prev + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prev => prev + 1);\n        break;\n\n      case 'bad':\n        setBad(prev => prev + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const percents = Math.round((good / countTotalFeedback()) * 100);\n    return countTotalFeedback() !== 0 ? percents : 0;\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={leaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() === 0 ? (\n          <Notification massage=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}